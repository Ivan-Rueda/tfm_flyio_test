spring.application.name=tfm_rest

#? Mongo DB
#? En local Docker API junto con Docker Mongo
#? spring.data.mongodb.host=${MONGO_HOST}
#? spring.data.mongodb.port=${MONGO_PORT}
#? spring.data.mongodb.username=apiUser
#? spring.data.mongodb.database=apiDB
#? spring.data.mongodb.password=apiPassword
#? spring.data.mongodb.authentication-database=admin

server.port=${PORT:8080}
spring.data.mongodb.port=27017

spring.data.mongodb.uri=mongodb+srv://apiUser:apiPassword@tfmtest.tevfag8.mongodb.net/?retryWrites=true&w=majority&appName=tfmTest
spring.data.mongodb.database=apiDB

#? MongoDB Atlas recomienda la conexión mediante URI, porque es mucho más sencillo 
#? y soporta configuraciones avanzadas de forma compacta (sharding, replicación, opciones de seguridad, etc.).
#? En Railway debera iniciarse la parte pubica y esa url se debe usar para navegar y para los llamados api, algo similar a:
#? https://tfmflyiotest-production.up.railway.app/api/empleados/v1    o   https://tfmflyiotest-production.up.railway.app/docs/swagger-ui/index.html

# Configurar Swagger para que utilice el protocolo correcto
springdoc.api-docs.enabled=true
springdoc.api-docs.protocol=https
springdoc.swagger-ui.url=/swagger-ui.html

# Necesario para que Spring reconozca las cabeceras de proxy y use HTTPS
server.forward-headers-strategy=framework
server.use-forward-headers=true
